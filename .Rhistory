library(readr)
library(ggplot2)
library(tidymodels)
library(patchwork)
tidymodels_prefer()
setwd("C:/Users/erald/Desktop/tcc")
dados <- read_delim("raw data.csv", delim = ";",
escape_double = FALSE, col_types = cols(CODCLI = col_integer(),
DATA = col_date(format = "%d/%m/%Y")),
locale = locale(decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
head(dados, 10)
colnames(dados) <- c('CODCLI', 'VLATEND', 'DATA')
skimr::skim(dados)
str(dados)
summary(dados)
str(dados)
summary(dados)
rm(list = ls())
library(dplyr)
library(readr)
library(ggplot2)
library(tidymodels)
library(patchwork)
tidymodels_prefer()
setwd("C:/Users/erald/Desktop/tcc")
dados <- read_delim("raw data.csv", delim = ";",
escape_double = FALSE, col_types = cols(CODCLI = col_integer(),
DATA = col_date(format = "%d/%m/%Y")),
locale = locale(decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
head(dados)
str(dados)
colnames(dados) <- c('CODCLI', 'VLATEND', 'DATA')
dados <- dados %>% group_by(CODCLI, DATA) %>% summarise(VENDAS = sum(VLATEND))
temp <- dados %>% arrange(DATA) %>% filter(DATA >= as.Date("2024-01-01")) %>% group_by(CODCLI) %>%
summarise(ultcomp = max(DATA),
primcomp_depoisjanela = min(DATA))
x <- dados %>% arrange(DATA) %>% filter(DATA < as.Date("2024-01-01")) %>% group_by(CODCLI) %>%
summarise(dcadastro = min(DATA), #data do cadastro
dcadastro_dias = as.Date("2023-12-31") - min(DATA),
d1 = rev(diff(DATA))[1],
d2 = rev(diff(DATA))[2],
d3 = rev(diff(DATA))[3],
dmedia = mean(c(d1,d2,d3)),
ddesvio = sd(c(d1,d2,d3)),
freq = n(),
tgasto = sum(VENDAS),
ultcompjanela = max(DATA),
) %>% filter(freq > 3)
dados <- x %>% left_join(temp)
dados$dia_ultcomp_primcomp <- dados$primcomp_depoisjanela - dados$ultcompjanela
rfv <- tibble(r = as.numeric(as.Date("2023-12-31") - dados$ultcompjanela),
f = dados$freq,
v = dados$tgasto,
CODCLI = dados$CODCLI)
((ggplot(dados, aes(x = rfv$r)) +
geom_histogram(bins = 45, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma da Recência das Compras",
x = "Valores",
y = "Frequência") + xlim(0, 300)) +
(ggplot(dados, aes(x = rfv$f)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma da Frequência de Compra",
x = "Valores",
y = "Frequência")) +
(ggplot(rfv, aes(x = v)) +
geom_histogram(bins = 35, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma do Valor Gasto",
x = "Valores",
y = "Frequência") + xlim(0, 100000)) )
rfv$r[rfv$r < quantile(rfv$r)[2]] = 4
rfv$r[rfv$r >= quantile(rfv$r)[2] & rfv$r < quantile(rfv$r)[3]] = 3
rfv$r[rfv$r >= quantile(rfv$r)[3] & rfv$r < quantile(rfv$r)[4]] = 2
rfv$r[rfv$r >= quantile(rfv$r)[4]] = 1
rfv$f[rfv$f < quantile(rfv$f)[2]] = 1
rfv$f[rfv$f >= quantile(rfv$f)[2] & rfv$f < quantile(rfv$f)[3]] = 2
rfv$f[rfv$f >= quantile(rfv$f)[3] & rfv$f < quantile(rfv$f)[4]] = 3
rfv$f[rfv$f >= quantile(rfv$f)[4]] = 4
rfv$v[rfv$v < quantile(rfv$v)[2]] = 1
rfv$v[rfv$v >= quantile(rfv$v)[2] & rfv$v < quantile(rfv$v)[3]] = 2
rfv$v[rfv$v >= quantile(rfv$v)[3] & rfv$v < quantile(rfv$v)[4]] = 3
rfv$v[rfv$v >= quantile(rfv$v)[4]] = 4
rfv <- rfv %>% mutate(rfv = r + f + v)
rfv$grupo2[rfv$rfv < quantile(rfv$rfv)[2]] = 'bronze customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[2] & rfv$rfv < quantile(rfv$rfv)[3]] = 'silver customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[3] & rfv$rfv < quantile(rfv$rfv)[4]] = 'gold customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[4]] = 'diamond customers'
dados <- dados %>% left_join(rfv)
dados <- dados %>% select(-c("dcadastro", "ultcompjanela", "ultcomp", "primcomp_depoisjanela"))
dados_censurados <- dados %>%
filter_all(any_vars(is.na(.)))
dados <- dados %>%
filter_all(all_vars(!is.na(.)))
summary(dados_censurados)
View(dados)
View(dados_censurados)
View(dados)
colnames(dados)
colnames(dados)
if(!require(devtools)) install.packages("devtools")
devtools::install_github("kassambara/ggcorrplot")
ggcorrplot(dados[,c(1:13)], hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
rm(list = ls())
library(dplyr)
library(readr)
library(ggplot2)
library(tidymodels)
library(patchwork)
library(ggcorrplot)
tidymodels_prefer()
setwd("C:/Users/erald/Desktop/tcc")
dados <- read_delim("raw data.csv", delim = ";",
escape_double = FALSE, col_types = cols(CODCLI = col_integer(),
DATA = col_date(format = "%d/%m/%Y")),
locale = locale(decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
head(dados)
str(dados)
colnames(dados) <- c('CODCLI', 'VLATEND', 'DATA')
dados <- dados %>% group_by(CODCLI, DATA) %>% summarise(VENDAS = sum(VLATEND))
temp <- dados %>% arrange(DATA) %>% filter(DATA >= as.Date("2024-01-01")) %>% group_by(CODCLI) %>%
summarise(ultcomp = max(DATA),
primcomp_depoisjanela = min(DATA))
x <- dados %>% arrange(DATA) %>% filter(DATA < as.Date("2024-01-01")) %>% group_by(CODCLI) %>%
summarise(dcadastro = min(DATA), #data do cadastro
dcadastro_dias = as.Date("2023-12-31") - min(DATA),
d1 = rev(diff(DATA))[1],
d2 = rev(diff(DATA))[2],
d3 = rev(diff(DATA))[3],
dmedia = mean(c(d1,d2,d3)),
ddesvio = sd(c(d1,d2,d3)),
freq = n(),
tgasto = sum(VENDAS),
ultcompjanela = max(DATA),
) %>% filter(freq > 3)
dados <- x %>% left_join(temp)
dados$dia_ultcomp_primcomp <- dados$primcomp_depoisjanela - dados$ultcompjanela
rfv <- tibble(r = as.numeric(as.Date("2023-12-31") - dados$ultcompjanela),
f = dados$freq,
v = dados$tgasto,
CODCLI = dados$CODCLI)
((ggplot(dados, aes(x = rfv$r)) +
geom_histogram(bins = 45, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma da Recência das Compras",
x = "Valores",
y = "Frequência") + xlim(0, 300)) +
(ggplot(dados, aes(x = rfv$f)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma da Frequência de Compra",
x = "Valores",
y = "Frequência")) +
(ggplot(rfv, aes(x = v)) +
geom_histogram(bins = 35, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma do Valor Gasto",
x = "Valores",
y = "Frequência") + xlim(0, 100000)) )
rfv$r[rfv$r < quantile(rfv$r)[2]] = 4
rfv$r[rfv$r >= quantile(rfv$r)[2] & rfv$r < quantile(rfv$r)[3]] = 3
rfv$r[rfv$r >= quantile(rfv$r)[3] & rfv$r < quantile(rfv$r)[4]] = 2
rfv$r[rfv$r >= quantile(rfv$r)[4]] = 1
rfv$f[rfv$f < quantile(rfv$f)[2]] = 1
rfv$f[rfv$f >= quantile(rfv$f)[2] & rfv$f < quantile(rfv$f)[3]] = 2
rfv$f[rfv$f >= quantile(rfv$f)[3] & rfv$f < quantile(rfv$f)[4]] = 3
rfv$f[rfv$f >= quantile(rfv$f)[4]] = 4
rfv$v[rfv$v < quantile(rfv$v)[2]] = 1
rfv$v[rfv$v >= quantile(rfv$v)[2] & rfv$v < quantile(rfv$v)[3]] = 2
rfv$v[rfv$v >= quantile(rfv$v)[3] & rfv$v < quantile(rfv$v)[4]] = 3
rfv$v[rfv$v >= quantile(rfv$v)[4]] = 4
rfv <- rfv %>% mutate(rfv = r + f + v)
rfv$grupo2[rfv$rfv < quantile(rfv$rfv)[2]] = 'bronze customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[2] & rfv$rfv < quantile(rfv$rfv)[3]] = 'silver customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[3] & rfv$rfv < quantile(rfv$rfv)[4]] = 'gold customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[4]] = 'diamond customers'
dados <- dados %>% left_join(rfv)
dados <- dados %>% select(-c("dcadastro", "ultcompjanela", "ultcomp", "primcomp_depoisjanela"))
dados_censurados <- dados %>%
filter_all(any_vars(is.na(.)))
dados <- dados %>%
filter_all(all_vars(!is.na(.)))
ggcorrplot(dados[,c(1:13)], hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
View(dados)
lapply(dados[,1:14] , numeric)
lapply(dados[,1:14] , numeric)
dados[,1:14]
sapply(dados[,1:14] , numeric)
lapply(dados[,1:14] , numeric, MARGIN = 2)
lapply(dados[,1:14] , numeric, MARGIN = 1\)
apply(dados, 2, numeric)
apply(dados, 1, numeric)
apply(dados, 2, numeric)
lapply(dados[,1:14] , as.numeric)
dados[,1:14] <- lapply(dados[,1:14] , as.numeric)
rm(list = ls())
library(dplyr)
library(readr)
library(ggplot2)
library(tidymodels)
library(patchwork)
library(ggcorrplot)
tidymodels_prefer()
setwd("C:/Users/erald/Desktop/tcc")
dados <- read_delim("raw data.csv", delim = ";",
escape_double = FALSE, col_types = cols(CODCLI = col_integer(),
DATA = col_date(format = "%d/%m/%Y")),
locale = locale(decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
head(dados)
str(dados)
colnames(dados) <- c('CODCLI', 'VLATEND', 'DATA')
dados <- dados %>% group_by(CODCLI, DATA) %>% summarise(VENDAS = sum(VLATEND))
temp <- dados %>% arrange(DATA) %>% filter(DATA >= as.Date("2024-01-01")) %>% group_by(CODCLI) %>%
summarise(ultcomp = max(DATA),
primcomp_depoisjanela = min(DATA))
x <- dados %>% arrange(DATA) %>% filter(DATA < as.Date("2024-01-01")) %>% group_by(CODCLI) %>%
summarise(dcadastro = min(DATA), #data do cadastro
dcadastro_dias = as.Date("2023-12-31") - min(DATA),
d1 = rev(diff(DATA))[1],
d2 = rev(diff(DATA))[2],
d3 = rev(diff(DATA))[3],
dmedia = mean(c(d1,d2,d3)),
ddesvio = sd(c(d1,d2,d3)),
freq = n(),
tgasto = sum(VENDAS),
ultcompjanela = max(DATA),
) %>% filter(freq > 3)
dados <- x %>% left_join(temp)
dados$dia_ultcomp_primcomp <- dados$primcomp_depoisjanela - dados$ultcompjanela
rfv <- tibble(r = as.numeric(as.Date("2023-12-31") - dados$ultcompjanela),
f = dados$freq,
v = dados$tgasto,
CODCLI = dados$CODCLI)
((ggplot(dados, aes(x = rfv$r)) +
geom_histogram(bins = 45, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma da Recência das Compras",
x = "Valores",
y = "Frequência") + xlim(0, 300)) +
(ggplot(dados, aes(x = rfv$f)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma da Frequência de Compra",
x = "Valores",
y = "Frequência")) +
(ggplot(rfv, aes(x = v)) +
geom_histogram(bins = 35, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma do Valor Gasto",
x = "Valores",
y = "Frequência") + xlim(0, 100000)) )
rfv$r[rfv$r < quantile(rfv$r)[2]] = 4
rfv$r[rfv$r >= quantile(rfv$r)[2] & rfv$r < quantile(rfv$r)[3]] = 3
rfv$r[rfv$r >= quantile(rfv$r)[3] & rfv$r < quantile(rfv$r)[4]] = 2
rfv$r[rfv$r >= quantile(rfv$r)[4]] = 1
rfv$f[rfv$f < quantile(rfv$f)[2]] = 1
rfv$f[rfv$f >= quantile(rfv$f)[2] & rfv$f < quantile(rfv$f)[3]] = 2
rfv$f[rfv$f >= quantile(rfv$f)[3] & rfv$f < quantile(rfv$f)[4]] = 3
rfv$f[rfv$f >= quantile(rfv$f)[4]] = 4
rfv$v[rfv$v < quantile(rfv$v)[2]] = 1
rfv$v[rfv$v >= quantile(rfv$v)[2] & rfv$v < quantile(rfv$v)[3]] = 2
rfv$v[rfv$v >= quantile(rfv$v)[3] & rfv$v < quantile(rfv$v)[4]] = 3
rfv$v[rfv$v >= quantile(rfv$v)[4]] = 4
rfv <- rfv %>% mutate(rfv = r + f + v)
rfv$grupo2[rfv$rfv < quantile(rfv$rfv)[2]] = 'bronze customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[2] & rfv$rfv < quantile(rfv$rfv)[3]] = 'silver customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[3] & rfv$rfv < quantile(rfv$rfv)[4]] = 'gold customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[4]] = 'diamond customers'
dados <- dados %>% left_join(rfv)
dados <- dados %>% select(-c("dcadastro", "ultcompjanela", "ultcomp", "primcomp_depoisjanela"))
dados[,1:14] <- lapply(dados[,1:14] , as.numeric)
dados_censurados <- dados %>%
filter_all(any_vars(is.na(.)))
dados <- dados %>%
filter_all(all_vars(!is.na(.)))
ggcorrplot(dados[,c(1:13)], hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
dados[,c(1:13)]
View(dados)
corr(dados[,1:13])
cor(dados[,1:13])
ggcorrplot(cor(dados[,c(1:14)]), hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
rm(list = ls())
library(dplyr)
library(readr)
library(ggplot2)
library(tidymodels)
library(patchwork)
library(ggcorrplot)
tidymodels_prefer()
setwd("C:/Users/erald/Desktop/tcc")
dados <- read_delim("raw data.csv", delim = ";",
escape_double = FALSE, col_types = cols(CODCLI = col_integer(),
DATA = col_date(format = "%d/%m/%Y")),
locale = locale(decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
head(dados)
str(dados)
colnames(dados) <- c('CODCLI', 'VLATEND', 'DATA')
dados <- dados %>% group_by(CODCLI, DATA) %>% summarise(VENDAS = sum(VLATEND))
temp <- dados %>% arrange(DATA) %>% filter(DATA >= as.Date("2024-01-01")) %>% group_by(CODCLI) %>%
summarise(ultcomp = max(DATA),
primcomp_depoisjanela = min(DATA))
x <- dados %>% arrange(DATA) %>% filter(DATA < as.Date("2024-01-01")) %>% group_by(CODCLI) %>%
summarise(dcadastro = min(DATA), #data do cadastro
dcadastro_dias = as.Date("2023-12-31") - min(DATA),
d1 = rev(diff(DATA))[1],
d2 = rev(diff(DATA))[2],
d3 = rev(diff(DATA))[3],
dmedia = mean(c(d1,d2,d3)),
ddesvio = sd(c(d1,d2,d3)),
freq = n(),
tgasto = sum(VENDAS),
ultcompjanela = max(DATA),
) %>% filter(freq > 3)
dados <- x %>% left_join(temp)
dados$dia_ultcomp_primcomp <- dados$primcomp_depoisjanela - dados$ultcompjanela
rfv <- tibble(r = as.numeric(as.Date("2023-12-31") - dados$ultcompjanela),
f = dados$freq,
v = dados$tgasto,
CODCLI = dados$CODCLI)
((ggplot(dados, aes(x = rfv$r)) +
geom_histogram(bins = 45, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma da Recência das Compras",
x = "Valores",
y = "Frequência") + xlim(0, 300)) +
(ggplot(dados, aes(x = rfv$f)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma da Frequência de Compra",
x = "Valores",
y = "Frequência")) +
(ggplot(rfv, aes(x = v)) +
geom_histogram(bins = 35, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma do Valor Gasto",
x = "Valores",
y = "Frequência") + xlim(0, 100000)) )
rfv$r[rfv$r < quantile(rfv$r)[2]] = 4
rfv$r[rfv$r >= quantile(rfv$r)[2] & rfv$r < quantile(rfv$r)[3]] = 3
rfv$r[rfv$r >= quantile(rfv$r)[3] & rfv$r < quantile(rfv$r)[4]] = 2
rfv$r[rfv$r >= quantile(rfv$r)[4]] = 1
rfv$f[rfv$f < quantile(rfv$f)[2]] = 1
rfv$f[rfv$f >= quantile(rfv$f)[2] & rfv$f < quantile(rfv$f)[3]] = 2
rfv$f[rfv$f >= quantile(rfv$f)[3] & rfv$f < quantile(rfv$f)[4]] = 3
rfv$f[rfv$f >= quantile(rfv$f)[4]] = 4
rfv$v[rfv$v < quantile(rfv$v)[2]] = 1
rfv$v[rfv$v >= quantile(rfv$v)[2] & rfv$v < quantile(rfv$v)[3]] = 2
rfv$v[rfv$v >= quantile(rfv$v)[3] & rfv$v < quantile(rfv$v)[4]] = 3
rfv$v[rfv$v >= quantile(rfv$v)[4]] = 4
rfv <- rfv %>% mutate(rfv = r + f + v)
rfv$grupo2[rfv$rfv < quantile(rfv$rfv)[2]] = 'bronze customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[2] & rfv$rfv < quantile(rfv$rfv)[3]] = 'silver customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[3] & rfv$rfv < quantile(rfv$rfv)[4]] = 'gold customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[4]] = 'diamond customers'
dados <- dados %>% left_join(rfv)
dados <- dados %>% select(-c("dcadastro", "ultcompjanela", "ultcomp", "primcomp_depoisjanela"))
dados[,1:14] <- lapply(dados[,1:14] , as.numeric)
colnames(dados) <- c("codcli", "dcadastro", "d1", "d2", "d3", "dmedia", "ddesvio", "freq", "tgasto", "Y", "r", "f", "v", "rfv", "clusters")
dados_censurados <- dados %>%
filter_all(any_vars(is.na(.)))
dados <- dados %>%
filter_all(all_vars(!is.na(.)))
ggcorrplot(cor(dados[,c(1:14)]), hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
# set.seed(2024)
# splitted <- initial_split(dados, prop = 0.7, strata = "dia_ultcomp_primcomp")
# treinamento <- training(splitted)
ggcorrplot(cor(dados[,c(1:14)]), hc.order = TRUE, type = "lower",
outline.col = "white", lab = T,
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(cor(dados[,c(1:14)]), hc.order = TRUE, type = "lower",
outline.col = "white", lab = F,
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(cor(dados[,c(1:14)]), hc.order = TRUE, type = "lower",
outline.col = "white", lab = T, tl.cex = 1,
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(cor(dados[,c(1:14)]), hc.order = TRUE, type = "lower",
outline.col = "white", lab = T, tl.cex = 0.5,
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(cor(dados[,c(1:14)]), hc.order = TRUE, type = "lower",
outline.col = "white", lab = T, tl.cex = 0.1,
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(cor(dados[,c(1:14)]), hc.order = TRUE, type = "lower",
outline.col = "white", lab = T, pch.cex =  0.1,
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
ggcorrplot(cor(dados[,c(1:14)]), hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
colnames(dados)
dados1 <- dados %>% select(-c("rfv", "clusters"))
dados2 <- dados %>% select(-c("rfv", "r", "f", "v"))
dados3 <- dados %>% select(-c("clusters", "r", "f", "v"))
View(dados1)
View(dados2)
View(dados3)
rm(list = ls())
library(dplyr)
library(readr)
library(ggplot2)
library(tidymodels)
library(patchwork)
library(ggcorrplot)
tidymodels_prefer()
setwd("C:/Users/erald/Desktop/tcc")
dados <- read_delim("raw data.csv", delim = ";",
escape_double = FALSE, col_types = cols(CODCLI = col_integer(),
DATA = col_date(format = "%d/%m/%Y")),
locale = locale(decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
head(dados)
str(dados)
colnames(dados) <- c('CODCLI', 'VLATEND', 'DATA')
dados <- dados %>% group_by(CODCLI, DATA) %>% summarise(VENDAS = sum(VLATEND))
temp <- dados %>% arrange(DATA) %>% filter(DATA >= as.Date("2024-01-01")) %>% group_by(CODCLI) %>%
summarise(ultcomp = max(DATA),
primcomp_depoisjanela = min(DATA))
x <- dados %>% arrange(DATA) %>% filter(DATA < as.Date("2024-01-01")) %>% group_by(CODCLI) %>%
summarise(dcadastro = min(DATA), #data do cadastro
dcadastro_dias = as.Date("2023-12-31") - min(DATA),
d1 = rev(diff(DATA))[1],
d2 = rev(diff(DATA))[2],
d3 = rev(diff(DATA))[3],
dmedia = mean(c(d1,d2,d3)),
ddesvio = sd(c(d1,d2,d3)),
freq = n(),
tgasto = sum(VENDAS),
ultcompjanela = max(DATA),
) %>% filter(freq > 3)
dados <- x %>% left_join(temp)
dados$dia_ultcomp_primcomp <- dados$primcomp_depoisjanela - dados$ultcompjanela
rfv <- tibble(r = as.numeric(as.Date("2023-12-31") - dados$ultcompjanela),
f = dados$freq,
v = dados$tgasto,
CODCLI = dados$CODCLI)
((ggplot(dados, aes(x = rfv$r)) +
geom_histogram(bins = 45, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma da Recência das Compras",
x = "Valores",
y = "Frequência") + xlim(0, 300)) +
(ggplot(dados, aes(x = rfv$f)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma da Frequência de Compra",
x = "Valores",
y = "Frequência")) +
(ggplot(rfv, aes(x = v)) +
geom_histogram(bins = 35, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma do Valor Gasto",
x = "Valores",
y = "Frequência") + xlim(0, 100000)) )
rfv$r[rfv$r < quantile(rfv$r)[2]] = 4
rfv$r[rfv$r >= quantile(rfv$r)[2] & rfv$r < quantile(rfv$r)[3]] = 3
rfv$r[rfv$r >= quantile(rfv$r)[3] & rfv$r < quantile(rfv$r)[4]] = 2
rfv$r[rfv$r >= quantile(rfv$r)[4]] = 1
rfv$f[rfv$f < quantile(rfv$f)[2]] = 1
rfv$f[rfv$f >= quantile(rfv$f)[2] & rfv$f < quantile(rfv$f)[3]] = 2
rfv$f[rfv$f >= quantile(rfv$f)[3] & rfv$f < quantile(rfv$f)[4]] = 3
rfv$f[rfv$f >= quantile(rfv$f)[4]] = 4
rfv$v[rfv$v < quantile(rfv$v)[2]] = 1
rfv$v[rfv$v >= quantile(rfv$v)[2] & rfv$v < quantile(rfv$v)[3]] = 2
rfv$v[rfv$v >= quantile(rfv$v)[3] & rfv$v < quantile(rfv$v)[4]] = 3
rfv$v[rfv$v >= quantile(rfv$v)[4]] = 4
rfv <- rfv %>% mutate(rfv = r + f + v)
rfv$grupo2[rfv$rfv < quantile(rfv$rfv)[2]] = 'bronze customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[2] & rfv$rfv < quantile(rfv$rfv)[3]] = 'silver customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[3] & rfv$rfv < quantile(rfv$rfv)[4]] = 'gold customers'
rfv$grupo2[rfv$rfv >= quantile(rfv$rfv)[4]] = 'diamond customers'
dados <- dados %>% left_join(rfv)
dados <- dados %>% select(-c("dcadastro", "ultcompjanela", "ultcomp", "primcomp_depoisjanela"))
dados[,1:14] <- lapply(dados[,1:14] , as.numeric)
colnames(dados) <- c("codcli", "dcadastro", "d1", "d2", "d3", "dmedia", "ddesvio", "freq", "tgasto", "Y", "r", "f", "v", "rfv", "clusters")
dados_censurados <- dados %>%
filter_all(any_vars(is.na(.)))
dados <- dados %>%
filter_all(all_vars(!is.na(.)))
ggcorrplot(cor(dados[,c(1:14)]), hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#6D9EC1", "white", "#E46726"))
dados1 <- dados %>% select(-c("rfv", "clusters"))
dados2 <- dados %>% select(-c("rfv", "r", "f", "v"))
dados3 <- dados %>% select(-c("clusters", "r", "f", "v"))
# set.seed(2024)
# splitted <- initial_split(dados, prop = 0.7, strata = "dia_ultcomp_primcomp")
# treinamento <- training(splitted)
set.seed(2024)
splitted <- initial_split(dados1, prop = 0.7, strata = "y")
set.seed(2024)
splitted <- initial_split(dados1, prop = 0.7, strata = "Y")
treinamento <- training(splitted)
receita <- recipe(formula = `Y` ~ . , dados1) %>%
step_corr(all_predictors()) %>%
step_YeoJohnson(all_predictors()) %>%
step_normalize(all_predictors())
install.packages("nnet")
install.packages("nnet")
install.packages("nnet")
install.packages("xgboost")
